@page
@model BirdCageShopRazorPage.Pages.Order.IndexModel

@if (TempData["notification"] != null)
{
    <div class="alert alert-primary m-0" role="alert">
        @TempData["notification"]
    </div>
}

@if (Model.Order.Count() == 0)
{
    <div class="alert alert-danger m-0" role="alert">
        Giỏ hàng trống
    </div>

    <div>
        @if (Model.Order.Where(o => new string("Waiting").Equals(o.Status)).Count() == 0)
        {
            <form action="/Order/Create" method="post">
                @Html.AntiForgeryToken()
                <button class="button_add_cart" type="submit">
                    Thêm giỏ hàng mới
                </button>
            </form>
        }
    </div>
}
else
{
    <section class="main">
        <h2>Cart History</h2>

        <table class="table table-striped d-sm-table">
            <thead>
                <tr>
                    <th>Order Date</th>
                    <th>Payment</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Order)
                {
                    <tr class="align-middle">
                        <td>
                            @Html.DisplayFor(modelItem => item.OrderDate)
                        </td>
                        <td>
                            @switch (item.PaymentStatus!)
                            {
                                case (int)BusinessObject.Enums.PaymentStatus.None:
                                    <span>None</span>
                                    break;
                                case (int)BusinessObject.Enums.PaymentStatus.Unpaid:
                                    <span>Unpaid</span>
                                    break;
                                case (int)BusinessObject.Enums.PaymentStatus.Paid:
                                    <span>Paid</span>
                                    break;
                            }
                        </td>
                        <td>
                            @switch (item.Status!)
                            {
                                case (int)BusinessObject.Enums.OrderStatus.Undefined:
                                    <span class="badge bg-dark text-white">Undefined</span>
                                    break;
                                case (int)BusinessObject.Enums.OrderStatus.Pending:
                                    <span class="badge bg-warning">Pending</span>
                                    break;
                                case (int)BusinessObject.Enums.OrderStatus.Processing:
                                    <span class="badge bg-primary">Processing</span>
                                    break;
                                case (int)BusinessObject.Enums.OrderStatus.Completed:
                                    <span class="badge bg-success">Completed</span>
                                    break;
                                case (int)BusinessObject.Enums.OrderStatus.Cancelled:
                                    <span class="badge bg-danger">Cancelled</span>
                                    break;
                                case (int)BusinessObject.Enums.OrderStatus.Waiting:
                                    <span class="badge bg-secondary">Waiting</span>
                                    break;
                            }
                        </td>
                        <td>
                            <a class="btn btn-sm btn-outline-primary" asp-page="./Details" asp-route-id="@item.OrderId">View</a>
                            <a class="btn btn-sm btn-outline-danger" asp-page="./Delete" asp-route-id="@item.OrderId">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </section>
}
