@page
@inject IHttpContextAccessor HttpContextAccessor
@model BirdCageShopRazorPage.Pages.Cage.CreateModel

@{
    ViewData["Title"] = "Create";

    var checkRole = HttpContextAccessor.HttpContext?.User.Claims.Where(c => c.Type == "scope").Any(c => c.Value.Contains("Staff") || c.Value.Contains("Admin")) ?? false;
}

<div class="mx-3">
    <h1>Create</h1>

    <h4>Cage</h4>
    <hr />
</div>
<div>
    <form method="post" class="row ml-3" enctype="multipart/form-data">
        <div class="col-4 border border-3 py-3">
            <h2>Cage Information</h2>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Cage.CageName" class="control-label">Cage Name</label>
                <input asp-for="Cage.CageName" class="form-control" />
                <span asp-validation-for="Cage.CageName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cage.Image" class="control-label">Preview Image</label>
                <input asp-for="Cage.Image" class="form-control" type="file" id="imageInput" accept="image/*"/>
                <div class="col-12 mt-2">
                    <img id="previewImage" src="https://t3.ftcdn.net/jpg/02/48/42/64/360_F_248426448_NVKLywWqArG2ADUxDq6QprtIzsF82dMF.jpg" 
                         alt="Picture Preview"
                         class="img-fluid w-100 h-100">
                </div>
                <span asp-validation-for="Cage.Image" class="text-danger"></span>
            </div>
            @if(checkRole){
                <div class="form-group mt-1">
                    <label asp-for="Cage.Status" class="control-label"></label>
                    <select asp-for="Cage.Status" class="form-control" asp-items="ViewBag.CageStatus"></select>
                </div>
                <div class="form-group">
                    <label asp-for="Cage.CagePrice" class="control-label">Price</label>
                    <input asp-for="Cage.CagePrice" class="form-control" type="number"/>
                    <span asp-validation-for="Cage.CagePrice" class="text-danger"></span>
                </div>
            }
            else{
                <input asp-for="Cage.Status" type="hidden" value="2"/>
            }
            <div class="form-group">
                <label asp-for="Cage.Height" class="control-label"></label>
                <input asp-for="Cage.Height" class="form-control" />
                <span asp-validation-for="Cage.Height" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cage.Radius" class="control-label"></label>
                <input asp-for="Cage.Radius" class="form-control" />
                <span asp-validation-for="Cage.Radius" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cage.CageWeight" class="control-label">Weight</label>
                <input asp-for="Cage.CageWeight" class="form-control" />
                <span asp-validation-for="Cage.CageWeight" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cage.Description" class="control-label"></label>
                <input asp-for="Cage.Description" class="form-control" />
                <span asp-validation-for="Cage.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cage.CategoryId" class="control-label">Cage Category</label>
                <select asp-for="Cage.CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
            </div>
        </div>

        <div class="col-8">
            <h2 class="mt-2 text-center">List of components</h2>
            <div id="components">
                @for (int i = 0; i < Model.Components.Count; i++)
                {
                    Model.CageComponents.Add(new DataTransferObject.CageComponentDTO());
                    @if (Model.Components[i].Required)
                    {
                        var totalPrice = Model.Components[i].ComponentPrice * Model.Components[i].QuantityRequired;
                        <input type="hidden" asp-for="CageComponents[i].ComponentId" value="@Model.Components[i].ComponentId" />

                        <div class="card my-1 rounded-2">
                            <div class="card-body row">
                                <div class="col-6">
                                    <div class="col-md-2 display-5">
                                        <label class="mt-4 fw-bolder">@Model.Components[i].ComponentName</label>
                                    </div>
                                    <div class="row justify-content-center align-items-center">
                                        <div class="col-7">
                                            <div class="mt-4 d-flex">
                                                <text class="mt-2">Material: </text>
                                                <select asp-for="CageComponents[i].Material" class="form-control ms-2"
                                                asp-items="ViewBag.Material" style="padding-left: 0.3rem; width: 50%;"></select>
                                            </div>
                                            <div class="mt-4">
                                                <text>Amount: </text>
                                                <input class="quantity" type="number"
                                               asp-for="CageComponents[i].Quantity"
                                               oninput="updateToTalPrice(this)"
                                               value="@Model.Components[i].QuantityRequired"
                                               min="@Model.Components[i].QuantityRequired"
                                               max="100"
                                               style="padding-left: 0.3rem;" />
                                            </div>
                                        </div>
                                        <div class="col-5 text-center d-flex">
                                            <text class="mt-2">Color: </text>
                                            <select asp-for="CageComponents[i].Color" class="form-control ms-2"
                                            asp-items="ViewBag.Color" style="padding-left: 0.3rem; width: 50%;"></select>
                                        </div>
                                    </div>
                                    <div class="mt-3">
                                        <text class="fw-bold">Total Price: </text>
                                        <input class="totalPrice" asp-for="CageComponents[i].Price"
                                       value="@totalPrice" readonly style="padding-left: 0.3rem;" /> VND
                                    </div>
                                </div>
                                <div class="col-6 d-flex justify-content-center align-items-center">
                                    <input type="hidden" class="price" value="@Model.Components[i]!.ComponentPrice" readonly />
                                    <label class="text-center display-6">@Model.Components[i]!.ComponentPrice VNĐ/cái</label>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
            <hr/>
            <div>
                <label class="col-3">Select Component</label>
                <select id="componentList" class="form-control" asp-items="ViewBag.Component"></select>
                <button class="btn btn-primary" type="button" onclick="addComponent()">Add component</button>
            </div>
        </div>

        @if(!checkRole){
            <div class="row mt-3 mb-3">
                <label class="col-3">Quantity order </label>
                <input class="col-7" type="number" asp-for="Quantity" value="1" min="1" max="5"/>
            </div>
        }

        <div class="form-group mt-3 text-center">
            <input type="submit" value="Create" class="btn btn-success" />
            <a asp-page="Index" class="btn btn-primary">Back</a>
        </div>
    </form>
</div>

<script>
    const imageInput = document.getElementById('imageInput');
    const previewImage = document.getElementById('previewImage');

    imageInput.onchange = evt => {
        const [file] = imageInput.files
        if (file) {
            previewImage.src = URL.createObjectURL(file)
        }
    }

    function updateToTalPrice(input){
        var quantity = input.value;
        var price = input.parentElement.parentElement.parentElement.parentElement.nextElementSibling.children[0].value;
        var totalPrice = input.parentElement.parentElement.parentElement.nextElementSibling.children[1];

        totalPrice.value = price * quantity;
    }

    async function addComponent() {
        var components = document.getElementById("componentList");
        var componentList = document.getElementById("components");
        var count = componentList.children.length / 2;
        var selectedComponent = components.options[components.selectedIndex];
        var id = selectedComponent.value;
        var name = selectedComponent.text;
        var price = 0;
        try {
            const response = await fetch('/api/Component/' + id);
            const data = await response.json();
            price = data.price;
        }
        catch (error) {
            console.error('Error:', error);
        }

        components.remove(components.selectedIndex);

        var hidden = document.createElement('INPUT');
        hidden.setAttribute("type", "hidden");
        hidden.setAttribute("value", id);
        hidden.setAttribute("id", "CageComponents_" + count + "__ComponentId");
        hidden.setAttribute("name", "CageComponents[" + count + "].ComponentId");

        var component = document.createElement('DIV');
        component.className = "card my-1 rounded-2";
        component.innerHTML = `<div class="card-body row">
                                        <div class="col-6">
                                            <div class="col-md-2 display-5">
                                                <label class="mt-4 fw-bolder">` + name + `</label>
                                            </div>
                                            <div class="row justify-content-center align-items-center">
                                                <div class="col-7">
                                                        <div class="mt-4 d-flex">
                                                        <text class="mt-2">Material: </text>
                                                            <select class="form-control ms-2" style="padding-left: 0.3rem; width: 50%;" id="CageComponents_` + count + `__Material" name="CageComponents[` + count + `].Material">
                                                                <option>Wood</option>
                                                                <option>Iron</option>
                                                                <option>Plastic</option>
                                                                <option>Galvanized Steel</option>
                                                                <option>Stainless Steel</option>
                                                            </select>
                                                    </div>
                                                    <div class="mt-4">
                                                        <text>Amount: </text>
                                                            <input class="quantity" type="number" oninput="updateToTalPrice(this)" value="1" min="1" max="100" style="padding-left: 0.3rem;" data-val="true" data-val-required="The Quantity field is required." id="CageComponents_` + count + `__Quantity" name="CageComponents[` + count + `].Quantity" aria-describedby="CageComponents_` + count + `__Quantity-error" aria-invalid="false">
                                                    </div>
                                                </div>
                                                <div class="col-5 text-center d-flex">
                                                    <text>Color: </text>
                                                    <select class="form-control ms-2" style="padding-left: 0.3rem; width: 50%;" id="CageComponents_` + count + `__Color" name="CageComponents[` + count + `].Color">
                                                        <option>None</option>
                                                        <option>Red</option>
                                                        <option>Green</option>
                                                        <option>Yellow</option>
                                                        <option>Blue</option>
                                                        <option>Black</option>
                                                        <option>White</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="mt-3">
                                                <text class="fw-bold">Total Price: </text>
                                                    <input class="totalPrice valid" value="` + price + `" readonly="" style="padding-left: 0.3rem;" type="text" data-val="true" data-val-number="The field Price must be a number." id="CageComponents_` + count + `__Price" name="CageComponents[` + count + `].Price" aria-describedby="CageComponents_` + count + `__Price-error">
                                            </div>
                                        </div>
                                        <div class="col-6 d-flex justify-content-center align-items-center">
                                                <input type="hidden" class="price" value="` + price + `" readonly="">
                                            <label class="text-center display-6">` + price + `/cái</label>
                                        </div>
                                    </div>`;

        document.getElementById("components").appendChild(hidden);
        document.getElementById("components").appendChild(component);
    }
</script>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
